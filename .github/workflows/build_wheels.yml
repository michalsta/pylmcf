name: Build

on:
  push:
    branches:
      - ci_wheels
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest, windows-11-arm]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Check version
        run: python .github/scripts/check_version.py

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          GITHUB_BUILDING_WHEELS: 1
          VERBOSE: 1
          MACOSX_DEPLOYMENT_TARGET: "10.13"
          CIBW_ENABLE: "pypy"
          CIBW_BUILD: "cp* pp*"
          CIBW_SKIP: "cp39-win_arm64 cp310-win_arm64"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check version
        run: python .github/scripts/check_version.py

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    # if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v5
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        # To test uploads to TestPyPI, uncomment the following:
        # with:
        #   repository-url: https://test.pypi.org/legacy/
